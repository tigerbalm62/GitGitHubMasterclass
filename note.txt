git branch --set-upstream-to=origin/main main
# then use git pull no need to specify the branch 

# git fetch to sync with remote but not pull changes
git fetch
# git status to know # of commits behind
git status

# git pull is = git fetch + git merge
# git remote -> check remote
# git log -> check commit history

** GitHub fork -> create a repo on your account
** then git clone 
** then make changes

# git show <id> - > show detail of the change
e.g. git show HEAD -> show latest change
     git show HEAD~3 -> show the 3rd prior to latest change

# git diff HEAD~1 HEAD~3

# git annotate <file> -> change history on a file

# vscode extension - gitLens


## undo changing
#  made change before staged
# git checkout -- <file>
#
# if already staged
# use git restore --staged <file> to unstage
# git checkout -- <file> to revert staged change

# get reset HEAD <file> -> back out the change are unstaged

# git add . -> refer the everything under current dir
# get reset HEAD .
# get checkout -- . 

# create branch
# git branch <branch>
# switch branch
# git checkout <branch>
# e.g. git branch dev
#      git checkout dev

## or create branch and checkout branch
# git checkout -b <branch>
# e.g. git checkout -b add-bootstrap => this create/checkout branch add-bootstrap under dev

